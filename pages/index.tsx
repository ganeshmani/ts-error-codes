import fs from "fs";
import path from "path";
import { useState, useEffect } from "react";
import type { NextPage } from "next";
import Link from "next/link";
import Head from "next/head";
import Image from "next/image";
import { getByCode, getAllCodes } from "@lib/content";
import { Content } from "@shared/interface";
import styles from "../styles/Home.module.css";
import Sidebar from "@components/Sidebar";
import ErrorInfo from "@components/ErrorInfo";
//https://github.com/Microsoft/TypeScript/blob/v1.6.2/src/compiler/diagnosticMessages.json
type Props = {
  codes: string[];
  allContent: Content[];
};

const Home: NextPage<Props> = ({ codes, allContent }) => {
  const [selectedContent, setSelectedContent] = useState<Content | null>(null);
  const [selectedCode, setSelectedCode] = useState<string>(codes[0]);
  const [codeData, setCodeData] = useState(codes);

  useEffect(() => {
    if (selectedCode) {
      const selectedContent = allContent.find(
        (content) => content.slug === selectedCode
      );
      setSelectedContent(selectedContent ? selectedContent : null);
    }
  }, [selectedCode]);

  const _handleCodeClick = (code: string) => {
    const selectedContent = allContent.find((content) => content.slug === code);

    setSelectedCode(code);
    setSelectedContent(selectedContent ? selectedContent : null);
  };

  const _handleSearch = (value: any) => {
    const filteredContent = codes.filter((content) => content.includes(value));
    if (value) {
      setCodeData(filteredContent);
    } else {
      setCodeData(codes);
    }
  };
  return (
    <div>
      <Head>
        <title>Typescript Codes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <div className="sticky top-0 z-50 h-16 bg-white shadow flex">
          <Link href="/">
            <a className="no-underline font-semibold text-xl invisible sm:visible my-auto ml-4">
              <h1 className="h-full">Typescript Codes</h1>
            </a>
          </Link>
        </div>
        <div className="md:flex mt-16 md:w-60 md:flex-col md:fixed md:inset-y-0">
          <div className="border-r border-gray-200 flex-1 flex flex-col min-h-0 bg-white">
            <Sidebar
              codes={codeData}
              selectedCode={selectedCode}
              handleCodeClick={_handleCodeClick}
              handleSearch={_handleSearch}
            />
          </div>
        </div>
        <div className="md:pl-80 md:pt-12 flex flex-col">
          <main>
            <ErrorInfo content={selectedContent} />
          </main>
        </div>
      </div>
    </div>
  );
};

export async function getStaticProps() {
  const allContent = await getAllCodes();
  const codesDir = path.join(process.cwd(), "codes");
  const files = fs.readdirSync(codesDir);

  const codes = files.map((filename) => filename.replace(".md", ""));

  return {
    props: {
      codes,
      allContent,
    },
  };
}

export default Home;
